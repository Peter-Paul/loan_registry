# get image for latest mysql
docker pull mysql:latest

#create and run container
docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag # host will be 0.0.0.0 on local machine by default using 3306
docker run --name some-mysql -p 127.0.0.1:3600:3600 -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag # host will be 127.0.0.1 on local machine

test with sql workbench and it should work

#incase you're having auth issues connection to nodejs server
#This is because caching_sha2_password is introduced in MySQL 8.0, but the Node.js version is not implemented yet
#we have to change it to mysql_native_password 
#bash into container
docker exec -it some-mysql bash

# run to use mysql commandline
mysql -uroot -pmy-secret-pw

# access the mysql database
use mysql

#then 
ALTER USER 'root' IDENTIFIED WITH mysql_native_password BY 'my-secret-pw';
or 
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'my-secret-pw';

#then
flush privileges;

This is a simple way of importing MySQL database in Docker.

In you Dockerfile you must have a shared folder. Shared folder is a directory in your host machine that is mounted to Docker instance.

Put the exported sql file in the shared folder.

Login to your Docker instance via docker exec -it DOCKER_CONTAINER_ID bin/bash.

Login to MySQL via mysql -u USERNAME -p.

While in MySQL CLI, create a database via create database DB_NAME;.

While in MySQL CLI, use the database you just created via use DB_NAME;.

While in MySQL CLI, import the sql file via source /path/to/file.sql.